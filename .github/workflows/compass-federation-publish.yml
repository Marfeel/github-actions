on:
  workflow_call:
    inputs:
      publicPath:
        required: true
        type: string
      bucket:
        required: true
        type: string
      remote:
        type: string
        default: remoteEntry.js
      env_vars:
        description: List of environment variables to set up, given in env=value format.
        required: false
        type: string
      node_options:
        description: List of node variables to set up, given in env=value format.
        required: false
        type: string
      waitForS3:
        description: Whether to wait for the S3 object to be updated before purging Fastly.
        required: false
        type: boolean
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      FASTLY_KEY:
        required: true
      FASTLY_SERVICE:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ inputs.bucket }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Set environment variables
        if: ${{ inputs.env_vars }}
        run: |
          for i in "${{ inputs.env_vars }}"
          do
            printf "%s\n" $i >> $GITHUB_ENV
          done

      - name: ðŸ“¦ Initialize
        run: npm ci
        env:
          NODE_OPTIONS: ${{ inputs.node_options }}

      - name: ðŸ›  Build
        run: PUBLIC_PATH=${{ inputs.publicPath }}/v2 GENERATE_SOURCEMAP=false CI= npm run build
        env:
          NODE_OPTIONS: ${{ inputs.node_options }}

      - name: ðŸš€ Upload to S3
        if: github.event.repository.name != 'compass-federation-template'
        run: |
          npx s3-deploy './build/**/${{ inputs.remote }}' --cwd './build/' --bucket ${{ inputs.bucket }}/v2 --cacheControl 'max-age=300, s-maxage=2592000' --region eu-west-1
          npx s3-deploy './build/**/*' --cwd './build/' --bucket ${{ inputs.bucket }}/v2 --cacheControl 'max-age=2592000' --region eu-west-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Verify S3 object update
        if: github.event.repository.name != 'compass-federation-template' && inputs.waitForS3 == true
        continue-on-error: true
        run: |
          BUCKET_BASE=$(echo ${{ inputs.bucket }} | cut -d'/' -f1)
          PATH=$(echo ${{ inputs.bucket }} | cut -d'/' -f2-)
          OBJECT_KEY=${PATH}/v2/${{ inputs.remote }}
          MAX_RETRIES=4
          RETRY=1

          while [ $RETRY -le $MAX_RETRIES ]
            do
              echo "$RETRY/$MAX_RETRIES - Verifying S3 object update..."

              LOCAL_FILE_SIZE=$(stat -c%s "./build/${{ inputs.remote }}")
              S3_FILE_SIZE=$(aws s3api head-object --bucket $BUCKET_BASE --key $OBJECT_KEY --query ContentLength --output text)

              if [ "$LOCAL_FILE_SIZE" -eq "$S3_FILE_SIZE" ]; then
                echo "File uploaded successfully."
                exit 0
              else
                if [ $RETRY -eq $MAX_RETRIES ]; then
                  echo "File still not uploaded after $MAX_RETRIES retries."
                  exit 1
                fi
                sleep 5
                RETRY=$((RETRY + 1))
              fi
            done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sleep 15 seconds
        if: github.event.repository.name != 'compass-federation-template' && inputs.waitForS3 == false
        run: sleep 15

      - name: ðŸš½ Purge Fastly
        if: github.event.repository.name != 'compass-federation-template'
        uses: Marfeel/github-actions/common/actions/purgeFastly@master
        with:
          fastly-key: ${{ secrets.FASTLY_KEY }}
          service-id: ${{ secrets.FASTLY_SERVICE }}
